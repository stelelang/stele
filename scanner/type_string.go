// Code generated by "stringer -type Type"; DO NOT EDIT.

package scanner

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[FUNC-1]
	_ = x[IMPORT-2]
	_ = x[LET-3]
	_ = x[TYPE-4]
	_ = x[IF-5]
	_ = x[ELSE-6]
	_ = x[SWITCH-7]
	_ = x[LPAREN-8]
	_ = x[RPAREN-9]
	_ = x[LBRACE-10]
	_ = x[RBRACE-11]
	_ = x[LBRACKET-12]
	_ = x[RBRACKET-13]
	_ = x[SEMI-14]
	_ = x[PLUS-15]
	_ = x[MINUS-16]
	_ = x[MULT-17]
	_ = x[DIV-18]
	_ = x[PLUSASSIGN-19]
	_ = x[MINUSASSIGN-20]
	_ = x[MULTASSIGN-21]
	_ = x[DIVASSIGN-22]
	_ = x[BITNOT-23]
	_ = x[BITOR-24]
	_ = x[BITAND-25]
	_ = x[NOT-26]
	_ = x[OR-27]
	_ = x[AND-28]
	_ = x[EQUAL-29]
	_ = x[NOTEQUAL-30]
	_ = x[LT-31]
	_ = x[GT-32]
	_ = x[LE-33]
	_ = x[GE-34]
	_ = x[ASSIGN-35]
	_ = x[DOT-36]
	_ = x[LSHIFT-37]
	_ = x[RSHIFT-38]
	_ = x[IDENT-39]
	_ = x[STRING-40]
	_ = x[INT-41]
	_ = x[FLOAT-42]
}

const _Type_name = "INVALIDFUNCIMPORTLETTYPEIFELSESWITCHLPARENRPARENLBRACERBRACELBRACKETRBRACKETSEMIPLUSMINUSMULTDIVPLUSASSIGNMINUSASSIGNMULTASSIGNDIVASSIGNBITNOTBITORBITANDNOTORANDEQUALNOTEQUALLTGTLEGEASSIGNDOTLSHIFTRSHIFTIDENTSTRINGINTFLOAT"

var _Type_index = [...]uint8{0, 7, 11, 17, 20, 24, 26, 30, 36, 42, 48, 54, 60, 68, 76, 80, 84, 89, 93, 96, 106, 117, 127, 136, 142, 147, 153, 156, 158, 161, 166, 174, 176, 178, 180, 182, 188, 191, 197, 203, 208, 214, 217, 222}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
